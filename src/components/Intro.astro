---
const counters: { label: string; number: string; id: string }[] = [
  {
    id: "art-counter",
    label: "Post",
    number: "85",
  },
  {
    id: "subs-counter",
    label: "Youtube",
    number: "120K",
  },
  {
    id: "reviews-counter",
    label: "Reviews",
    number: "180",
  },
];
---

<div
  class="relative mx-12 flex flex-col items-center justify-center xl:flex-row xl:gap-3"
>
  <div class="w-full xl:w-1/3">
    <h1 class="text-xl">
      Entra a Hua's Doodle-Dazzled <span class="font-bold"
        >Digital Universe!</span
      >
    </h1>
    <div class="relative">
      <svg class="absolute h-full w-full overflow-visible">
        <defs>
          <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style={{ stopColor: "#DC3A2B", stopOpacity: 1 }}
            ></stop>
            <stop offset="100%" style={{ stopColor: "#E18510", stopOpacity: 1 }}
            ></stop>
          </linearGradient>
        </defs>
        <path
          id="border-path"
          fill="none"
          stroke="url(#gradient)"
          stroke-width="4"></path>
      </svg>

      <p id="anim-p" class="p-6 text-lg">
        Hola, te haz encontrado con el queño rincon de internet de <span
          class="font-bold text-orange-600">Hua's</span
        >, donde la creatividad corre de manera desenfrenada como un huracan de
        arte y felicidad.<br />
        <br />
         Quedate, explora hermosas obras maestras, y disfruta de las travesuras
        artísticas que viene del corazón. ¡Te divertirás más de lo que piensas!
        <br />
        <br />
         Deléitate con las impredecibles travesuras artísticas que surgen del
        lienzo de este universo digital. Aquí cada visita es una aventura, cada
        mirada una exploración. ¡Sumérgete, los píxeles son cálidos!
      </p>
    </div>
    <div class="flex justify-center pt-12 text-center mb-12 xl:gap-16">
      {
        counters.map(({ label, number, id }) => (
          <div class="w-32">
            <h2>{label}</h2>
            <p id={id} class="text-xl font-bold">
              {number}
            </p>
          </div>
        ))
      }
    </div>
  </div>
  <div class="relative">
    <img transition:animate="fade" class="h-full" src="/main-portrait.jpg" alt="hua portrait" />
    <div class="absolute bottom-0 right-0 translate-y-1/4">
      <img transition:animate="fade" class="opacity-[.7]" src="/paint.png" alt="paint" />
    </div>
  </div>
</div>

<div class="mt-12 h-4 w-full bg-black"></div>

<style>
  #border-path {
    animation: draw 1s forwards 1s ease-out;
  }
  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  }
</style>

<script>
  function updatePath() {
    const textMain = document.querySelector("#anim-p") as HTMLElement;
    const path = document.querySelector("#border-path") as SVGPathElement;

    if (textMain && path) {
      path.setAttribute(
        "d",
        `M0,0 V${textMain.offsetHeight} H${textMain.offsetHeight} v${
          textMain.offsetHeight / 2
        }`
      );
    }
    const pathLength = path.getTotalLength();
    path.style.strokeDasharray = pathLength.toString();
    path.style.strokeDashoffset = pathLength.toString();
  }

  function incrementCounter(
    selector: string,
    current: number,
    target: number,
    duration: number,
    letter: string = ""
  ) {
    let counter = document.getElementById(selector);
    let stepTime = Math.abs(Math.floor(duration / target));

    if (current < target && counter) {
      current++;
      counter.innerText = current.toString() + letter;
      setTimeout(() => {
        incrementCounter(selector, current, target, duration, letter);
      }, stepTime);
    }
  }

  //   Incrementar contadores
  incrementCounter("art-counter", 0, 85, 2000);
  incrementCounter("subs-counter", 0, 120, 2000, "K");
  incrementCounter("reviews-counter", 0, 180, 2000);

  window.addEventListener("DOMContentLoaded", updatePath);
  window.addEventListener("resize", updatePath);
</script>
